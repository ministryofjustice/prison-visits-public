version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/prison-visits-public
    docker:
      - image: circleci/ruby:2.4.2-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
    steps:
      - checkout
      - restore_cache:
          key: prison-visits-public-{{ checksum "Gemfile.lock" }}
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - run:
          name: install firefox
          command: |
            if [[ $(command -v firefox) ]] && [[ $(firefox --version) == "Mozilla Firefox $FIREFOX_VERSION" ]]; then
              echo "Skiping, Firefox $FIREFOX_VERSION already install."
            else
              sudo rm -rf /opt/firefox
              wget -L "https://ftp.mozilla.org/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2" -O "firefox-$FIREFOX_VERSION.tar.bz2"
              sudo tar xjf "firefox-$FIREFOX_VERSION.tar.bz2" -C /opt
            fi
            [[ -L /usr/local/bin/firefox ]] || sudo ln -sf /opt/firefox/firefox /usr/bin/firefox
      - run:
          name: install geckodriver
          command: |
            if [[ $(command -v geckodriver) ]] && [[ $(geckodriver --version) =~ $GECKODRIVER_VERSION  ]]; then
              echo "Skiping, geckodriver $GECKODRIVER_VERSION already install."
            else
              wget https://github.com/mozilla/geckodriver/releases/download/v0.19.0/geckodriver-v0.19.0-linux64.tar.gz
              sudo tar -zxvf geckodriver-v0.19.0-linux64.tar.gz -C /opt
            fi
            [[ -L /usr/local/bin/geckodriver ]] || sudo ln -sf /opt/geckodriver /usr/local/bin/geckodriver

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            bundle exec rake
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      - save_cache:
          key: prison-visits-public-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: screenshots
          path: coverage

  # The following section is an attempts to have circleci run our integration tests per branch
  # It was abandonned because it was causing out of memory errors. Maybe this will be worth optimising in the future
  # build:
  #   working_directory: ~/prison-visits-public
  #   docker:
  #     - image: docker:17.09.0-ce-git
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - type: shell
  #       name: Push application Docker image
  #       command: |
  #         docker login -u $DOCKER_USER -p $DOCKER_PASS
  #         docker build -t "stupidcodefactory/prison-visits-public:${CIRCLE_BRANCH}" .
  #         docker push "stupidcodefactory/prison-visits-public:${CIRCLE_BRANCH}"
# workflows:
#   version: 2
#   test-and-build:
#     jobs:
#       - test
#       - build:
#           requires:
#             - test
